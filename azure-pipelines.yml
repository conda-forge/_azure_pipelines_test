# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: linux
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'

  - script: |
      echo Add other tasks to build, test, and deploy your project.
      python3 ./test_secret.py
    displayName: 'Run a multi-line script'
    env: 
      MYSECRET: $(pipeline-secret)

- job: Vs2019-Server2019
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - script: |
      echo Add other tasks to build, test, and deploy your project.
      python ./test_secret.py
    displayName: 'Run a multi-line script'
    env: 
      MYSECRET: $(pipeline-secret)
  
  - script: |
      pip install winregistry
      python ./test_registry.py
    displayName: 'Fetch some registry keys'     

- job: windows_vs2017_win2016
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      echo Add other tasks to build, test, and deploy your project.
      python ./test_secret.py
    displayName: 'Run a multi-line script'
    env: 
      MYSECRET: $(pipeline-secret)
  
  - script: |
      pip install winregistry
      python ./test_registry.py
    displayName: 'Fetch some registry keys'     
    
  - script:
      dir "C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\"
    displayName: Dir some things C:\Program Files (x86)

- job: windows_vs2015_win2012r2
  pool:
    vmImage: 'vs2015-win2012r2'
  steps:
  - script: |
      echo Add other tasks to build, test, and deploy your project.
      python ./test_secret.py
    displayName: 'Run a multi-line script'
    env: 
      MYSECRET: $(pipeline-secret)

- job: aarch64_sudo_test
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: |
      sudo pip install --upgrade pip
      sudo pip install setuptools shyaml
    displayName: Install dependencies
  # configure qemu binfmt-misc running.  This allows us to run docker containers 
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register
      ls /proc/sys/fs/binfmt_misc/
    displayName: Configure binfmt_misc
  
  - script: |
      sudo apt-get install qemu binfmt-support qemu-user-static

  - script: |
      ./run_docker_build.sh
    displayName: Run docker build
    
  
